#!/bin/sh -ue
#.help
# Update version to match that from pyr script.

fatal() {
    printf %s\\n "$(basename "$0") error: $2" >&2
    exit "$1"
}

handle_option() {
    case "$1" in
        *) fatal 64 "unknown option $1" ;;
    esac
}
while [ $# -gt 0 ]; do
    case "$1" in
        --) shift; break ;;
        --*=*) x="${1#--}"; handle_option "${x%%=*}" "${x#*=}"; shift ;;
        --*) handle_option "${1#--}"; shift ;;
        -?) handle_option "${1#-}"; shift ;;
        -?*)
            v="${1#??}"
            x="${1%"$v"}"
            handle_option "${x#-}" "$v"
            shift
            ;;
        *) break ;;
    esac
done

if [ $# != 0 ]; then
    fatal 64 'unexpected arguments'
fi


cd "$(dirname "$0")/.."
version="$(head -n3 cmd/pyr | tail -n1 | cut -d' ' -f2)"
module_version="$(grep __version__ py3/pyr/__init__.py | cut -d\" -f2)"
[ -n "$module_version" ] || fatal 70 'failed reading module version'

same=true
if [ x"$module_version" != x"$version" ]; then
    printf %s\\n "updating module version from $module_version to $version"
    sed -i.~ -r 's/^(__version__ = ").+(")$/\1'"$version"'\2/' py3/pyr/__init__.py
    rm py3/pyr/__init__.py.~
    same=false
fi

if $same; then
    printf %s\\n "version: $version"
fi
